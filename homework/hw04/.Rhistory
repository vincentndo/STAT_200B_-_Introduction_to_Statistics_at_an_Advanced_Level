mle
winter.precip
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta))
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
hist(winter.precip)
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta))
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 2, beta = 2)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta))
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 2, beta = 2)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip)
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip)
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta))
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 0.5, beta = 0.5)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
source('~/workplace/STAT_200B_-_Introduction_to_Statistics_at_an_Advanced_Level/homework/hw04/betaexample.R', echo=TRUE)
?optim
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 2, beta = 2)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 0.5, beta = 0.5)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 3, beta = 3)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 10, beta = 10)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = TRUE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
source('~/workplace/STAT_200B_-_Introduction_to_Statistics_at_an_Advanced_Level/homework/hw04/betaexample.R', echo=TRUE)
plot(alpha.test[,1], nll.alpha, type = "l")
plot(beta.test[,2], nll.beta, type = "l")
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
## Examine the nll at the min
alpha.test <- cbind(seq(mle[1]/2, mle[1]*2, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = x, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/2, mle[2]*2, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = x, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
## Estimate the Hessian (Fisher information matrix) and construct 95% normal-based confidence interval
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = x, verbose = TRUE)
mle <- op$par
J <- solve(op$hessian) # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
lower <- mle - 2*se.hat
upper <- mle + 2*se.hat
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
alpha.test <- cbind(seq(mle[1]/2, mle[1]*2, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = x, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/2, mle[2]*2, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = x, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = x, verbose = TRUE)
mle <- op$par
J <- solve(op$hessian) # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
lower <- mle - 2*se.hat
lower
upper <- mle + 2*se.hat
upper
?gamma
?dgamma
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
## Examine the nll at the min
alpha.test <- cbind(seq(mle[1]/2, mle[1]*2, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = x, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/2, mle[2]*2, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = x, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
## Estimate the Hessian (Fisher information matrix) and construct 95% normal-based confidence interval
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = x, verbose = FALSE)
mle <- op$par
J <- solve(op$hessian) # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
lower <- mle - 2*se.hat
lower
upper <- mle + 2*se.hat
upper
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
## Examine the nll at the min
alpha.test <- cbind(seq(mle[1]/5, mle[1]*5, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = x, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/5, mle[2]*5, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = x, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
## Estimate the Hessian (Fisher information matrix) and construct 95% normal-based confidence interval
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = x, verbose = FALSE)
mle <- op$par
J <- solve(op$hessian) # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
lower <- mle - 2*se.hat
lower
upper <- mle + 2*se.hat
upper
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Examine the nll at the min
alpha.test <- cbind(seq(mle[1]/5, mle[1]*5, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = winter.precip, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/5, mle[2]*5, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = winter.precip, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
# Estimate the Hessian (Fisher information matrix) and construct 95% normal-based confidence interval
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = winter.precip, verbose = FALSE)
mle <- op$par
J <- solve(op$hessian) # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
lower <- mle - 2*se.hat
lower
upper <- mle + 2*se.hat
upper
# Read data file and process data
precip = read.csv("berkeleyprecip.csv", header = TRUE)
precip[precip == -99999] = NA
# Calculate the total winter precipitation for each year (removing missing values)
winter.precip = precip$DEC + precip$JAN + precip$FEB
winter.precip = winter.precip[!is.na(winter.precip)]
hist(winter.precip)
# Write a function for a negative gamma log-likelihood
nll = function(par, x, verbose = FALSE) {
alpha = par[1]
beta = par[2]
ll = sum(dgamma(x, alpha, beta, log = TRUE))
if (verbose) {
print(c(par, -ll))
}
return(-ll)
}
# Numerical minimize the negative gamma log-likelihood
start <- c(alpha = 1, beta = 1)    # starting values
eps <- 1e-10    # small value for lower bounds
op <- optim(par = start, fn = nll, lower = rep(eps, 2), x = winter.precip, verbose = FALSE)
# Print the result, which is a list, extract elements using $
op
mle <- op$par
mle
# Examine the nll at the min
alpha.test <- cbind(seq(mle[1]/2, mle[1]*2, length = 100), mle[2])
nll.alpha <- apply(alpha.test, 1, nll, x = winter.precip, verbose = FALSE)
plot(alpha.test[,1], nll.alpha, type = "l")
beta.test <- cbind(mle[1], seq(mle[2]/2, mle[2]*2, length = 100))
nll.beta <- apply(beta.test, 1, nll, x = winter.precip, verbose = FALSE)
plot(beta.test[,2], nll.beta, type = "l")
# Estimate the Hessian (Fisher information matrix) and construct 95% normal-based confidence interval
op <- optim(par = start, fn = nll,
lower = rep(eps, 2), hessian = TRUE,
x = winter.precip, verbose = FALSE)
mle <- op$par
J <- solve(op$hessian)    # no negative - already working with negative ll
se.hat <- sqrt(diag(J))
# Lower values
lower <- mle - 2*se.hat
lower
# Uppter values
upper <- mle + 2*se.hat
upper
